{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./logged-in.guard\";\nimport * as i2 from \"./authentication.service\";\nimport * as i3 from \"@angular/router\";\nexport let RoleGuard = /*#__PURE__*/(() => {\n  class RoleGuard {\n    constructor(authGuard, authService, router) {\n      this.authGuard = authGuard;\n      this.authService = authService;\n      this.router = router;\n    }\n\n    canActivate(route, state) {\n      return __awaiter(this, void 0, void 0, function* () {\n        // await this.authService.setRole();\n        console.log(this.authService.role + \" hello\"); //call loggedin guard to determine if user is logged in\n\n        return this.authGuard.canActivate(route, state).then(auth => {\n          if (!auth) {\n            console.log(\"User did not make it past authentication\");\n            return false;\n          } //if user has been logged in check role\n          else if (auth) {\n            if (this.authService.role != null && this.authService.role == \"Admin\") {\n              console.log(\"Admin is able to access this tab\");\n              return true;\n            } else {\n              this.router.navigate(['/404']);\n              return false;\n            }\n          }\n        });\n      });\n    }\n\n  }\n\n  RoleGuard.ɵfac = function RoleGuard_Factory(t) {\n    return new (t || RoleGuard)(i0.ɵɵinject(i1.LoggedInGuard), i0.ɵɵinject(i2.AuthenticationService), i0.ɵɵinject(i3.Router));\n  };\n\n  RoleGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RoleGuard,\n    factory: RoleGuard.ɵfac\n  });\n  return RoleGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}