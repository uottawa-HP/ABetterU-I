{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nlet LoginComponent = class LoginComponent {\n  constructor(router, loginService, firestore) {\n    this.router = router;\n    this.loginService = loginService;\n    this.firestore = firestore;\n    this.email = '';\n    this.password = '';\n    this.role = '';\n    this.signedIn = false;\n  } //check role from firebase\n\n\n  getRole() {\n    this.staffFound = null;\n    let userReference = this.firestore.collection('users', ref => ref.where('email', '==', this.email));\n    let query = userReference.valueChanges();\n    query.pipe(map(arr => arr[0])).subscribe(value => {\n      try {\n        this.role = value['role'];\n      } catch (e) {\n        this.staffFound = false;\n      }\n    });\n\n    if (this.staffFound == false) {\n      return;\n    }\n\n    this.staffFound = true;\n  }\n\n  checkLogin() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.getRole();\n      yield this.delay(300);\n\n      if (this.email != '' && this.password != '') {\n        //only logs in user if there has been a role Admin or volutneer assigned\n        if (this.role == \"Admin\" || this.role == \"Volunteer\") {\n          if ((yield this.loginService.signIn(this.email, this.password)) == false) {\n            this.message = \"Invalid email or password\";\n            return false;\n          } else {\n            return this.loginService.signIn(this.email, this.password);\n          }\n        } //**ARCHIVED**\n        // else if(this.role == \"Volunteer\"){\n        //   if(await this.loginService.signInVolunteer(this.email, this.password) == false){\n        //     this.message = \"Invalid email or password\";\n        //     return false;\n        //   }else{\n        //       return this.loginService.signInVolunteer(this.email, this.password);\n        //   }\n        // }\n        else {\n          this.message = \"Account not authorized for Login!\";\n        }\n      } else {\n        this.message = 'Invalid Login! Email or password is missing!';\n      }\n    });\n  }\n\n  delay(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":null,"metadata":{},"sourceType":"module"}