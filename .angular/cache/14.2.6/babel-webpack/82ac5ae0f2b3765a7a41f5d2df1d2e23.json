{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/authentication.service\";\nimport * as i3 from \"@angular/fire/compat/firestore\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction LoginComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.message, \" \");\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(router, loginService, firestore) {\n      this.router = router;\n      this.loginService = loginService;\n      this.firestore = firestore;\n      this.email = '';\n      this.password = '';\n      this.role = '';\n      this.signedIn = false;\n    } //check role from firebase\n\n\n    getRole() {\n      this.staffFound = null;\n      let userReference = this.firestore.collection('users', ref => ref.where('email', '==', this.email));\n      let query = userReference.valueChanges();\n      query.pipe(map(arr => arr[0])).subscribe(value => {\n        try {\n          this.role = value['role'];\n        } catch (e) {\n          this.staffFound = false;\n        }\n      });\n\n      if (this.staffFound == false) {\n        return;\n      }\n\n      this.staffFound = true;\n    }\n\n    checkLogin() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.getRole();\n        yield this.delay(300);\n\n        if (this.email != '' && this.password != '') {\n          //only logs in user if there has been a role Admin or volutneer assigned\n          if (this.role == \"Admin\" || this.role == \"Volunteer\") {\n            if ((yield this.loginService.signIn(this.email, this.password)) == false) {\n              this.message = \"Invalid email or password\";\n              return false;\n            } else {\n              return this.loginService.signIn(this.email, this.password);\n            }\n          } //**ARCHIVED**\n          // else if(this.role == \"Volunteer\"){\n          //   if(await this.loginService.signInVolunteer(this.email, this.password) == false){\n          //     this.message = \"Invalid email or password\";\n          //     return false;\n          //   }else{\n          //       return this.loginService.signInVolunteer(this.email, this.password);\n          //   }\n          // }\n          else {\n            this.message = \"Account not authorized for Login!\";\n          }\n        } else {\n          this.message = 'Invalid Login! Email or password is missing!';\n        }\n      });\n    }\n\n    delay(ms) {\n      return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthenticationService), i0.ɵɵdirectiveInject(i3.AngularFirestore));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 22,\n    vars: 3,\n    consts: [[\"href\", \"https://fonts.googleapis.com/css?family=Barlow Condensed\", \"rel\", \"stylesheet\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"id\", \"box\"], [1, \"row\"], [1, \"col-sm-12\", \"my-auto\"], [1, \"text-center\"], [2, \"color\", \"white\"], [\"type\", \"email\", \"name\", \"email\", \"placeholder\", \"Email\", 1, \"input-group-text\", \"w-30\", \"mx-auto\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"password\", \"placeholder\", \"Password\", 1, \"input-group-text\", \"w-30\", \"mx-auto\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 2, \"background-color\", \"#EA7754\", 3, \"click\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\")(1, \"head\");\n        i0.ɵɵelement(2, \"link\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"body\");\n        i0.ɵɵtemplate(4, LoginComponent_div_4_Template, 3, 1, \"div\", 1);\n        i0.ɵɵelementStart(5, \"div\", 2)(6, \"div\", 3)(7, \"div\", 4)(8, \"div\", 5)(9, \"h1\", 6);\n        i0.ɵɵtext(10, \"System Navigation Database\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(11, \"br\");\n        i0.ɵɵelementStart(12, \"form\")(13, \"div\", 5)(14, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵelementStart(16, \"div\", 5)(17, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(18, \"br\");\n        i0.ɵɵelementStart(19, \"div\", 5)(20, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_20_listener() {\n          return ctx.checkLogin();\n        });\n        i0.ɵɵtext(21, \"Login\");\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.message);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.email);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm],\n    styles: [\"input[_ngcontent-%COMP%]{background-color:#fff}#box[_ngcontent-%COMP%]{background-color:#232942;text-align:center;justify-content:center;display:flex;padding:30px}\", \"body[_ngcontent-%COMP%] {\\n    font-family: 'Barlow Condensed';font-size: 22px;\\n}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}